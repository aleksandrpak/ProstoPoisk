//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="ExchangeRatesSoap", Namespace="http://webservices.lb.lt/ExchangeRates")]
public partial class ExchangeRates : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback getListOfCurrenciesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getCurrentExchangeRateOperationCompleted;
    
    private System.Threading.SendOrPostCallback getExchangeRateOperationCompleted;
    
    private System.Threading.SendOrPostCallback getExchangeRatesByDate_XmlStringOperationCompleted;
    
    private System.Threading.SendOrPostCallback getExchangeRatesByCurrency_XmlStringOperationCompleted;
    
    private System.Threading.SendOrPostCallback getExchangeRatesByDateOperationCompleted;
    
    private System.Threading.SendOrPostCallback getExchangeRatesXmlSchemaOperationCompleted;
    
    private System.Threading.SendOrPostCallback getExchangeRatesByCurrencyOperationCompleted;
    
    /// <remarks/>
    public ExchangeRates() {
        this.Url = "http://webservices.lb.lt/ExchangeRates/ExchangeRates.asmx";
    }
    
    /// <remarks/>
    public event getListOfCurrenciesCompletedEventHandler getListOfCurrenciesCompleted;
    
    /// <remarks/>
    public event getCurrentExchangeRateCompletedEventHandler getCurrentExchangeRateCompleted;
    
    /// <remarks/>
    public event getExchangeRateCompletedEventHandler getExchangeRateCompleted;
    
    /// <remarks/>
    public event getExchangeRatesByDate_XmlStringCompletedEventHandler getExchangeRatesByDate_XmlStringCompleted;
    
    /// <remarks/>
    public event getExchangeRatesByCurrency_XmlStringCompletedEventHandler getExchangeRatesByCurrency_XmlStringCompleted;
    
    /// <remarks/>
    public event getExchangeRatesByDateCompletedEventHandler getExchangeRatesByDateCompleted;
    
    /// <remarks/>
    public event getExchangeRatesXmlSchemaCompletedEventHandler getExchangeRatesXmlSchemaCompleted;
    
    /// <remarks/>
    public event getExchangeRatesByCurrencyCompletedEventHandler getExchangeRatesByCurrencyCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.lb.lt/ExchangeRates/getListOfCurrencies", RequestNamespace="http://webservices.lb.lt/ExchangeRates", ResponseNamespace="http://webservices.lb.lt/ExchangeRates", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode getListOfCurrencies() {
        object[] results = this.Invoke("getListOfCurrencies", new object[0]);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetListOfCurrencies(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getListOfCurrencies", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndgetListOfCurrencies(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void getListOfCurrenciesAsync() {
        this.getListOfCurrenciesAsync(null);
    }
    
    /// <remarks/>
    public void getListOfCurrenciesAsync(object userState) {
        if ((this.getListOfCurrenciesOperationCompleted == null)) {
            this.getListOfCurrenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetListOfCurrenciesOperationCompleted);
        }
        this.InvokeAsync("getListOfCurrencies", new object[0], this.getListOfCurrenciesOperationCompleted, userState);
    }
    
    private void OngetListOfCurrenciesOperationCompleted(object arg) {
        if ((this.getListOfCurrenciesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getListOfCurrenciesCompleted(this, new getListOfCurrenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.lb.lt/ExchangeRates/getCurrentExchangeRate", RequestNamespace="http://webservices.lb.lt/ExchangeRates", ResponseNamespace="http://webservices.lb.lt/ExchangeRates", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public decimal getCurrentExchangeRate(string Currency) {
        object[] results = this.Invoke("getCurrentExchangeRate", new object[] {
                    Currency});
        return ((decimal)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCurrentExchangeRate(string Currency, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCurrentExchangeRate", new object[] {
                    Currency}, callback, asyncState);
    }
    
    /// <remarks/>
    public decimal EndgetCurrentExchangeRate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((decimal)(results[0]));
    }
    
    /// <remarks/>
    public void getCurrentExchangeRateAsync(string Currency) {
        this.getCurrentExchangeRateAsync(Currency, null);
    }
    
    /// <remarks/>
    public void getCurrentExchangeRateAsync(string Currency, object userState) {
        if ((this.getCurrentExchangeRateOperationCompleted == null)) {
            this.getCurrentExchangeRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCurrentExchangeRateOperationCompleted);
        }
        this.InvokeAsync("getCurrentExchangeRate", new object[] {
                    Currency}, this.getCurrentExchangeRateOperationCompleted, userState);
    }
    
    private void OngetCurrentExchangeRateOperationCompleted(object arg) {
        if ((this.getCurrentExchangeRateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getCurrentExchangeRateCompleted(this, new getCurrentExchangeRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.lb.lt/ExchangeRates/getExchangeRate", RequestNamespace="http://webservices.lb.lt/ExchangeRates", ResponseNamespace="http://webservices.lb.lt/ExchangeRates", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public decimal getExchangeRate(string Currency, string Date) {
        object[] results = this.Invoke("getExchangeRate", new object[] {
                    Currency,
                    Date});
        return ((decimal)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetExchangeRate(string Currency, string Date, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getExchangeRate", new object[] {
                    Currency,
                    Date}, callback, asyncState);
    }
    
    /// <remarks/>
    public decimal EndgetExchangeRate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((decimal)(results[0]));
    }
    
    /// <remarks/>
    public void getExchangeRateAsync(string Currency, string Date) {
        this.getExchangeRateAsync(Currency, Date, null);
    }
    
    /// <remarks/>
    public void getExchangeRateAsync(string Currency, string Date, object userState) {
        if ((this.getExchangeRateOperationCompleted == null)) {
            this.getExchangeRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExchangeRateOperationCompleted);
        }
        this.InvokeAsync("getExchangeRate", new object[] {
                    Currency,
                    Date}, this.getExchangeRateOperationCompleted, userState);
    }
    
    private void OngetExchangeRateOperationCompleted(object arg) {
        if ((this.getExchangeRateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getExchangeRateCompleted(this, new getExchangeRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.lb.lt/ExchangeRates/getExchangeRatesByDate_XmlString", RequestNamespace="http://webservices.lb.lt/ExchangeRates", ResponseNamespace="http://webservices.lb.lt/ExchangeRates", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string getExchangeRatesByDate_XmlString(string Date) {
        object[] results = this.Invoke("getExchangeRatesByDate_XmlString", new object[] {
                    Date});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetExchangeRatesByDate_XmlString(string Date, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getExchangeRatesByDate_XmlString", new object[] {
                    Date}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetExchangeRatesByDate_XmlString(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getExchangeRatesByDate_XmlStringAsync(string Date) {
        this.getExchangeRatesByDate_XmlStringAsync(Date, null);
    }
    
    /// <remarks/>
    public void getExchangeRatesByDate_XmlStringAsync(string Date, object userState) {
        if ((this.getExchangeRatesByDate_XmlStringOperationCompleted == null)) {
            this.getExchangeRatesByDate_XmlStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExchangeRatesByDate_XmlStringOperationCompleted);
        }
        this.InvokeAsync("getExchangeRatesByDate_XmlString", new object[] {
                    Date}, this.getExchangeRatesByDate_XmlStringOperationCompleted, userState);
    }
    
    private void OngetExchangeRatesByDate_XmlStringOperationCompleted(object arg) {
        if ((this.getExchangeRatesByDate_XmlStringCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getExchangeRatesByDate_XmlStringCompleted(this, new getExchangeRatesByDate_XmlStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.lb.lt/ExchangeRates/getExchangeRatesByCurrency_XmlString", RequestNamespace="http://webservices.lb.lt/ExchangeRates", ResponseNamespace="http://webservices.lb.lt/ExchangeRates", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string getExchangeRatesByCurrency_XmlString(string Currency, string DateLow, string DateHigh) {
        object[] results = this.Invoke("getExchangeRatesByCurrency_XmlString", new object[] {
                    Currency,
                    DateLow,
                    DateHigh});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetExchangeRatesByCurrency_XmlString(string Currency, string DateLow, string DateHigh, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getExchangeRatesByCurrency_XmlString", new object[] {
                    Currency,
                    DateLow,
                    DateHigh}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetExchangeRatesByCurrency_XmlString(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getExchangeRatesByCurrency_XmlStringAsync(string Currency, string DateLow, string DateHigh) {
        this.getExchangeRatesByCurrency_XmlStringAsync(Currency, DateLow, DateHigh, null);
    }
    
    /// <remarks/>
    public void getExchangeRatesByCurrency_XmlStringAsync(string Currency, string DateLow, string DateHigh, object userState) {
        if ((this.getExchangeRatesByCurrency_XmlStringOperationCompleted == null)) {
            this.getExchangeRatesByCurrency_XmlStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExchangeRatesByCurrency_XmlStringOperationCompleted);
        }
        this.InvokeAsync("getExchangeRatesByCurrency_XmlString", new object[] {
                    Currency,
                    DateLow,
                    DateHigh}, this.getExchangeRatesByCurrency_XmlStringOperationCompleted, userState);
    }
    
    private void OngetExchangeRatesByCurrency_XmlStringOperationCompleted(object arg) {
        if ((this.getExchangeRatesByCurrency_XmlStringCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getExchangeRatesByCurrency_XmlStringCompleted(this, new getExchangeRatesByCurrency_XmlStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.lb.lt/ExchangeRates/getExchangeRatesByDate", RequestNamespace="http://webservices.lb.lt/ExchangeRates", ResponseNamespace="http://webservices.lb.lt/ExchangeRates", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode getExchangeRatesByDate(string Date) {
        object[] results = this.Invoke("getExchangeRatesByDate", new object[] {
                    Date});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetExchangeRatesByDate(string Date, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getExchangeRatesByDate", new object[] {
                    Date}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndgetExchangeRatesByDate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void getExchangeRatesByDateAsync(string Date) {
        this.getExchangeRatesByDateAsync(Date, null);
    }
    
    /// <remarks/>
    public void getExchangeRatesByDateAsync(string Date, object userState) {
        if ((this.getExchangeRatesByDateOperationCompleted == null)) {
            this.getExchangeRatesByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExchangeRatesByDateOperationCompleted);
        }
        this.InvokeAsync("getExchangeRatesByDate", new object[] {
                    Date}, this.getExchangeRatesByDateOperationCompleted, userState);
    }
    
    private void OngetExchangeRatesByDateOperationCompleted(object arg) {
        if ((this.getExchangeRatesByDateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getExchangeRatesByDateCompleted(this, new getExchangeRatesByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.lb.lt/ExchangeRates/getExchangeRatesXmlSchema", RequestNamespace="http://webservices.lb.lt/ExchangeRates", ResponseNamespace="http://webservices.lb.lt/ExchangeRates", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string getExchangeRatesXmlSchema() {
        object[] results = this.Invoke("getExchangeRatesXmlSchema", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetExchangeRatesXmlSchema(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getExchangeRatesXmlSchema", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetExchangeRatesXmlSchema(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getExchangeRatesXmlSchemaAsync() {
        this.getExchangeRatesXmlSchemaAsync(null);
    }
    
    /// <remarks/>
    public void getExchangeRatesXmlSchemaAsync(object userState) {
        if ((this.getExchangeRatesXmlSchemaOperationCompleted == null)) {
            this.getExchangeRatesXmlSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExchangeRatesXmlSchemaOperationCompleted);
        }
        this.InvokeAsync("getExchangeRatesXmlSchema", new object[0], this.getExchangeRatesXmlSchemaOperationCompleted, userState);
    }
    
    private void OngetExchangeRatesXmlSchemaOperationCompleted(object arg) {
        if ((this.getExchangeRatesXmlSchemaCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getExchangeRatesXmlSchemaCompleted(this, new getExchangeRatesXmlSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.lb.lt/ExchangeRates/getExchangeRatesByCurrency", RequestNamespace="http://webservices.lb.lt/ExchangeRates", ResponseNamespace="http://webservices.lb.lt/ExchangeRates", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode getExchangeRatesByCurrency(string Currency, string DateLow, string DateHigh) {
        object[] results = this.Invoke("getExchangeRatesByCurrency", new object[] {
                    Currency,
                    DateLow,
                    DateHigh});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetExchangeRatesByCurrency(string Currency, string DateLow, string DateHigh, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getExchangeRatesByCurrency", new object[] {
                    Currency,
                    DateLow,
                    DateHigh}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndgetExchangeRatesByCurrency(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public void getExchangeRatesByCurrencyAsync(string Currency, string DateLow, string DateHigh) {
        this.getExchangeRatesByCurrencyAsync(Currency, DateLow, DateHigh, null);
    }
    
    /// <remarks/>
    public void getExchangeRatesByCurrencyAsync(string Currency, string DateLow, string DateHigh, object userState) {
        if ((this.getExchangeRatesByCurrencyOperationCompleted == null)) {
            this.getExchangeRatesByCurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExchangeRatesByCurrencyOperationCompleted);
        }
        this.InvokeAsync("getExchangeRatesByCurrency", new object[] {
                    Currency,
                    DateLow,
                    DateHigh}, this.getExchangeRatesByCurrencyOperationCompleted, userState);
    }
    
    private void OngetExchangeRatesByCurrencyOperationCompleted(object arg) {
        if ((this.getExchangeRatesByCurrencyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getExchangeRatesByCurrencyCompleted(this, new getExchangeRatesByCurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getListOfCurrenciesCompletedEventHandler(object sender, getListOfCurrenciesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getListOfCurrenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getListOfCurrenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getCurrentExchangeRateCompletedEventHandler(object sender, getCurrentExchangeRateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getCurrentExchangeRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getCurrentExchangeRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public decimal Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((decimal)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getExchangeRateCompletedEventHandler(object sender, getExchangeRateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getExchangeRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getExchangeRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public decimal Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((decimal)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getExchangeRatesByDate_XmlStringCompletedEventHandler(object sender, getExchangeRatesByDate_XmlStringCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getExchangeRatesByDate_XmlStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getExchangeRatesByDate_XmlStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getExchangeRatesByCurrency_XmlStringCompletedEventHandler(object sender, getExchangeRatesByCurrency_XmlStringCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getExchangeRatesByCurrency_XmlStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getExchangeRatesByCurrency_XmlStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getExchangeRatesByDateCompletedEventHandler(object sender, getExchangeRatesByDateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getExchangeRatesByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getExchangeRatesByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getExchangeRatesXmlSchemaCompletedEventHandler(object sender, getExchangeRatesXmlSchemaCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getExchangeRatesXmlSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getExchangeRatesXmlSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getExchangeRatesByCurrencyCompletedEventHandler(object sender, getExchangeRatesByCurrencyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getExchangeRatesByCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getExchangeRatesByCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}
